/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.NhoTaiKhoanDao;
import dao.TaiKhoanDao;
import helper.Auth;
import helper.DialogHelper;
import java.awt.Cursor;
import javax.swing.JPanel;
import model.TaiKhoan;

import java.util.Properties;
import java.util.TimerTask;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Timer;

/**
 *
 * @author vietn
 */
public class Login extends javax.swing.JDialog {

    /**
     * Creates new form Login
     */
    public Login(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        lblDangNhap.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblKetThuc.setCursor(new Cursor(Cursor.HAND_CURSOR));
        setVisiblePNL(pnlLogin);
        checkGhiNhoMK();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDoiMatKhau = new javax.swing.JPanel();
        txtDMKuser = new javax.swing.JTextField();
        txtDMKEmail = new javax.swing.JTextField();
        txtDMKLayS1 = new javax.swing.JTextField();
        txtDMKLayS2 = new javax.swing.JTextField();
        txtDMKLayS3 = new javax.swing.JTextField();
        txtDMKLayS4 = new javax.swing.JTextField();
        btnDMKLayMa = new javax.swing.JLabel();
        btnDMKHuy = new javax.swing.JLabel();
        lblDQuenMK = new javax.swing.JLabel();
        pnlLogin = new javax.swing.JPanel();
        lblThongbao = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        chkNho = new javax.swing.JCheckBox();
        txtMatKhau = new javax.swing.JPasswordField();
        lblDangNhap = new javax.swing.JLabel();
        lblQuenMatKhau = new javax.swing.JLabel();
        lblKetThuc = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 800));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlDoiMatKhau.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDMKuser.setBorder(null);
        pnlDoiMatKhau.add(txtDMKuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 260, 40));

        txtDMKEmail.setBorder(null);
        pnlDoiMatKhau.add(txtDMKEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 260, 40));

        txtDMKLayS1.setBorder(null);
        txtDMKLayS1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDMKLayS1KeyReleased(evt);
            }
        });
        pnlDoiMatKhau.add(txtDMKLayS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 600, 50, 40));

        txtDMKLayS2.setBorder(null);
        txtDMKLayS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDMKLayS2ActionPerformed(evt);
            }
        });
        txtDMKLayS2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDMKLayS2KeyReleased(evt);
            }
        });
        pnlDoiMatKhau.add(txtDMKLayS2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, 50, 40));

        txtDMKLayS3.setBorder(null);
        txtDMKLayS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDMKLayS3ActionPerformed(evt);
            }
        });
        txtDMKLayS3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDMKLayS3KeyReleased(evt);
            }
        });
        pnlDoiMatKhau.add(txtDMKLayS3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 600, 50, 40));

        txtDMKLayS4.setBorder(null);
        txtDMKLayS4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDMKLayS4KeyReleased(evt);
            }
        });
        pnlDoiMatKhau.add(txtDMKLayS4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 600, 50, 40));

        btnDMKLayMa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnDMKLayMa.setText("Lấy Mã");
        btnDMKLayMa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDMKLayMaMouseClicked(evt);
            }
        });
        pnlDoiMatKhau.add(btnDMKLayMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 520, 80, 30));

        btnDMKHuy.setFont(new java.awt.Font("Dialog", 1, 21)); // NOI18N
        btnDMKHuy.setText("Hủy");
        btnDMKHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDMKHuyMouseClicked(evt);
            }
        });
        pnlDoiMatKhau.add(btnDMKHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 510, 80, 50));

        lblDQuenMK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/DoiMatKhau.png"))); // NOI18N
        lblDQuenMK.setText("L");
        pnlDoiMatKhau.add(lblDQuenMK, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        getContentPane().add(pnlDoiMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        pnlLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThongbao.setBackground(new java.awt.Color(255, 51, 51));
        lblThongbao.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        lblThongbao.setForeground(new java.awt.Color(255, 0, 51));
        pnlLogin.add(lblThongbao, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 330, 30));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Ghi nhớ mật khẩu ?");
        pnlLogin.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, -1, -1));

        txtTaiKhoan.setText("1");
        txtTaiKhoan.setBorder(null);
        txtTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaiKhoanActionPerformed(evt);
            }
        });
        pnlLogin.add(txtTaiKhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 270, 40));

        chkNho.setBackground(new java.awt.Color(255, 255, 255));
        chkNho.setForeground(new java.awt.Color(255, 255, 255));
        chkNho.setMargin(new java.awt.Insets(7, 7, 7, 7));
        pnlLogin.add(chkNho, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 460, 30, 30));

        txtMatKhau.setText("1234");
        txtMatKhau.setBorder(null);
        pnlLogin.add(txtMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 270, 30));

        lblDangNhap.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDangNhap.setText("Đăng Nhập");
        lblDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDangNhapMouseClicked(evt);
            }
        });
        pnlLogin.add(lblDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 560, -1, -1));

        lblQuenMatKhau.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblQuenMatKhau.setText("Đăng nhập bằng email");
        lblQuenMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQuenMatKhauMouseClicked(evt);
            }
        });
        pnlLogin.add(lblQuenMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, -1, -1));

        lblKetThuc.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblKetThuc.setText("Kết Thúc");
        lblKetThuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblKetThucMouseClicked(evt);
            }
        });
        pnlLogin.add(lblKetThuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 560, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Login2.png"))); // NOI18N
        jLabel1.setText("Nhớ mật khẩu ?");
        pnlLogin.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        getContentPane().add(pnlLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblDangNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDangNhapMouseClicked
        if (check() == true) {
            DangNhap();
        }
    }//GEN-LAST:event_lblDangNhapMouseClicked

    private void lblKetThucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblKetThucMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblKetThucMouseClicked

    private void txtTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaiKhoanActionPerformed

    private void txtDMKLayS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDMKLayS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDMKLayS2ActionPerformed

    private void txtDMKLayS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDMKLayS3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDMKLayS3ActionPerformed

    private void lblQuenMatKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQuenMatKhauMouseClicked
        setVisiblePNL(pnlDoiMatKhau);
    }//GEN-LAST:event_lblQuenMatKhauMouseClicked

    private void btnDMKHuyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDMKHuyMouseClicked
        setVisiblePNL(pnlLogin);
    }//GEN-LAST:event_btnDMKHuyMouseClicked

    private void btnDMKLayMaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDMKLayMaMouseClicked
        if (checkMaNV()) {
            demNguoc();
            String sendma = "";
            for (int i = 0; i <= 3; i++) {
                int a = (int) (Math.random() * 10);
                ma[i] = a + "";
                System.out.println(ma[i]);
                sendma += ma[i];
            }
            sendMail(txtDMKEmail.getText(), sendma);
        }
    }//GEN-LAST:event_btnDMKLayMaMouseClicked

    private void txtDMKLayS1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDMKLayS1KeyReleased
        if (txtDMKLayS1.getText().length() == 1) {
            txtDMKLayS2.requestFocus();
        }
    }//GEN-LAST:event_txtDMKLayS1KeyReleased

    private void txtDMKLayS2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDMKLayS2KeyReleased
        if (txtDMKLayS2.getText().length() == 1) {
            txtDMKLayS3.requestFocus();
        }
    }//GEN-LAST:event_txtDMKLayS2KeyReleased

    private void txtDMKLayS3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDMKLayS3KeyReleased
        if (txtDMKLayS3.getText().length() == 1) {
            txtDMKLayS4.requestFocus();
        }
    }//GEN-LAST:event_txtDMKLayS3KeyReleased

    private void txtDMKLayS4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDMKLayS4KeyReleased
        if (checkNhapMa()) {
            if (checkMa()) {
               // DialogHelper.alert(this, "ma hợp lệ");
                Auth.user = nv;
                NhoTK(nv);
                this.dispose();
            } else {
                DialogHelper.alert(this, "Mã không tồn tại");
                txtDMKLayS1.setText("");
                txtDMKLayS2.setText("");
                txtDMKLayS3.setText("");
                txtDMKLayS4.setText("");
                txtDMKLayS1.requestFocus();
            }
        } else {
            DialogHelper.alert(this, "Nhap ma");
        }
    }//GEN-LAST:event_txtDMKLayS4KeyReleased
    void sendMail(String email, String ma) {
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", 465);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.port", 465);
        try {

            Session s;
            s = Session.getInstance(props, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication("vitsilo03@gmail.com", "vit123456");
                }
            });
            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress("vitsilo03@gmail.com"));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
            msg.setSubject("yeu cau dang nhap");
            msg.setText("Mã đăng nhập :" + ma);
            Transport.send(msg);
        } catch (MessagingException e) {
            System.out.println(e);
        }
    }

    boolean checkMa() {
        if (!ma[0].equals(txtDMKLayS1.getText())) {
            System.out.println(ma[0]);

            return false;
        }

        if (!ma[1].equals(txtDMKLayS2.getText())) {
            System.out.println(ma[1]);

            return false;
        }

        if (!ma[2].equals(txtDMKLayS3.getText())) {
            System.out.println(ma[2]);

            return false;
        }

        if (!ma[3].equals(txtDMKLayS4.getText())) {
            System.out.println(ma[3]);

            return false;
        }

        return true;
    }

    boolean checkNhapMa() {
        if (txtDMKLayS1.getText().equals("")) {
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Login dialog = new Login(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    TaiKhoanDao dao = new TaiKhoanDao();

    Boolean check() {
        if (txtTaiKhoan.getText().equalsIgnoreCase("")) {
            lblThongbao.setText("Đăng nhập thất bại : Không được bỏ trống tài khoản !");
            txtTaiKhoan.requestFocus();
            return false;
        } else if (txtMatKhau.getText().equalsIgnoreCase("")) {
            lblThongbao.setText("Đăng nhập thất bại : Không được bỏ trống mật khẩu !");
            txtMatKhau.requestFocus();
            return false;
        }

        return true;
    }

    void DangNhap() {
        String tk = txtTaiKhoan.getText();
        String mk = txtMatKhau.getText();

        TaiKhoan nv = dao.findById(tk);
        if (nv == null) {
            lblThongbao.setText("Đăng nhập thất bại : sai tài khoản !");
            txtTaiKhoan.requestFocus();
        } else {
            if (!nv.getMatKhau().equals(mk)) {
                lblThongbao.setText("Đăng nhập thất bại : sai mật khẩu !");
                txtMatKhau.requestFocus();
            } else {
                Auth.user = nv;
                NhoTK(nv);
                this.dispose();
            }
        }
    }

    void NhoTK(TaiKhoan nv) {
        String[] tkmk = nhoTK.Select();
        System.out.println(tkmk[0] + " " + tkmk[1]);
        if (!tkmk[0].equals("")) {

            nhoTK.update(nv.getTaiKhoan(), nv.getMatKhau(), chkNho.isSelected() ? "1" : "0");
        } else {
            nhoTK.insert(nv.getTaiKhoan(), nv.getMatKhau(), chkNho.isSelected() ? "1" : "0");
        }
    }

    void KetThuc() {
        System.exit(0);
    }
    NhoTaiKhoanDao nhoTK = new NhoTaiKhoanDao();

    void checkGhiNhoMK() {
        if (nhoTK.checknho()) {
            chkNho.setSelected(true);
            String[] tkmk = nhoTK.Select();
            txtTaiKhoan.setText(tkmk[0]);
            txtMatKhau.setText(tkmk[1]);
        } else {
            chkNho.setSelected(false);
            txtTaiKhoan.setText("");
            txtMatKhau.setText("");
        }
    }

    void setVisiblePNL(JPanel pnl) {
        pnlDoiMatKhau.setVisible(false);
        pnlLogin.setVisible(false);

        pnl.setVisible(true);
    }

    ////////////////////////////////////////////////////////đăng nhập bằng email.////////////////////////
    String[] ma = {"", "", "", ""};
    int dem = 59;

    void demNguoc() {
        btnDMKLayMa.setEnabled(false);
        Timer t = new java.util.Timer();
        TimerTask tt = new TimerTask() {
            @Override
            public void run() {
                btnDMKLayMa.setText("   " + dem + "   ");
                dem--;

                if (dem < 0) {
                    btnDMKLayMa.setText("Lấy mã");
                    btnDMKLayMa.setEnabled(true);
                    dem = 59;
                    for (int i = 0; i <= 3; i++) {

                        ma[i] = "";

                    }
                    t.cancel();
                }
            }
        };
        t.schedule(tt, 1000, 1000);

    }
    TaiKhoan nv = new TaiKhoan();

    boolean checkMaNV() {
        nv = dao.findById(txtDMKuser.getText());
        if (nv == null) {

            DialogHelper.alert(this, "Không tìm thấy mã đăng nhập!");
            return false;
        } else {
            System.out.println(nv.getEmail());
            if (!nv.getEmail().equals(txtDMKEmail.getText())) {
                DialogHelper.alert(this, "Email không đúng!");
                return false;
            }
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDMKHuy;
    private javax.swing.JLabel btnDMKLayMa;
    private javax.swing.JCheckBox chkNho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblDQuenMK;
    private javax.swing.JLabel lblDangNhap;
    private javax.swing.JLabel lblKetThuc;
    private javax.swing.JLabel lblQuenMatKhau;
    private javax.swing.JLabel lblThongbao;
    private javax.swing.JPanel pnlDoiMatKhau;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JTextField txtDMKEmail;
    private javax.swing.JTextField txtDMKLayS1;
    private javax.swing.JTextField txtDMKLayS2;
    private javax.swing.JTextField txtDMKLayS3;
    private javax.swing.JTextField txtDMKLayS4;
    private javax.swing.JTextField txtDMKuser;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
}
